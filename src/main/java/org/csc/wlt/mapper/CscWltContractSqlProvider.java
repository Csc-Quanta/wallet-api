package org.csc.wlt.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import java.util.List;
import java.util.Map;
import org.csc.wlt.entity.CscWltContract;
import org.csc.wlt.entity.CscWltContractExample.Criteria;
import org.csc.wlt.entity.CscWltContractExample.Criterion;
import org.csc.wlt.entity.CscWltContractExample;

public class CscWltContractSqlProvider {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table csc_wlt_contract
	 *
	 * @mbggenerated Fri Jun 08 18:04:10 CST 2018
	 */
	public String countByExample(CscWltContractExample example) {
		BEGIN();
		SELECT("count(*)");
		FROM("csc_wlt_contract");
		applyWhere(example, false);
		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table csc_wlt_contract
	 *
	 * @mbggenerated Fri Jun 08 18:04:10 CST 2018
	 */
	public String deleteByExample(CscWltContractExample example) {
		BEGIN();
		DELETE_FROM("csc_wlt_contract");
		applyWhere(example, false);
		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table csc_wlt_contract
	 *
	 * @mbggenerated Fri Jun 08 18:04:10 CST 2018
	 */
	public String insertSelective(CscWltContract record) {
		BEGIN();
		INSERT_INTO("csc_wlt_contract");

		if (record.getContractId() != null) {
			VALUES("contract_id", "#{contractId,jdbcType=VARCHAR}");
		}

		if (record.getContractAddress() != null) {
			VALUES("contract_address", "#{contractAddress,jdbcType=VARCHAR}");
		}

		if (record.getContractTxHash() != null) {
			VALUES("contract_tx_hash", "#{contractTxHash,jdbcType=VARCHAR}");
		}

		if (record.getContractType() != null) {
			VALUES("contract_type", "#{contractType,jdbcType=VARCHAR}");
		}

		if (record.getContractName() != null) {
			VALUES("contract_name", "#{contractName,jdbcType=VARCHAR}");
		}

		if (record.getContractStatus() != null) {
			VALUES("contract_status", "#{contractStatus,jdbcType=VARCHAR}");
		}

		if (record.getCreatedTime() != null) {
			VALUES("created_time", "#{createdTime,jdbcType=TIMESTAMP}");
		}

		if (record.getUpdatedTime() != null) {
			VALUES("updated_time", "#{updatedTime,jdbcType=TIMESTAMP}");
		}

		if (record.getReserved1() != null) {
			VALUES("reserved1", "#{reserved1,jdbcType=VARCHAR}");
		}

		if (record.getReserved2() != null) {
			VALUES("reserved2", "#{reserved2,jdbcType=VARCHAR}");
		}

		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table csc_wlt_contract
	 *
	 * @mbggenerated Fri Jun 08 18:04:10 CST 2018
	 */
	public String selectByExample(CscWltContractExample example) {
		BEGIN();
		if (example != null && example.isDistinct()) {
			SELECT_DISTINCT("contract_id");
		} else {
			SELECT("contract_id");
		}
		SELECT("contract_address");
		SELECT("contract_tx_hash");
		SELECT("contract_type");
		SELECT("contract_name");
		SELECT("contract_status");
		SELECT("created_time");
		SELECT("updated_time");
		SELECT("reserved1");
		SELECT("reserved2");
		FROM("csc_wlt_contract");
		applyWhere(example, false);

		if (example != null && example.getOrderByClause() != null) {
			ORDER_BY(example.getOrderByClause());
		}

		if (example != null && example.getSelectCols() != null && example.getSelectCols().trim().length() > 0) {
			BEGIN();
			if (example != null && example.isDistinct()) {
				SELECT_DISTINCT(example.getSelectCols());
			} else {
				SELECT(example.getSelectCols());
			}
			FROM("csc_wlt_contract");
			applyWhere(example, false);
		}
		if (example != null) {
			if (example.getLimit() != Integer.MAX_VALUE && example.getOffset() >= 0) {
				String retstr = SQL().concat(" limit " + example.getOffset() + "," + example.getLimit());
				if (example.isForUpdate()) {
					return retstr + "  FOR UPDATE ";
				} else {
					return retstr;
				}
			} else if (example.isForUpdate()) {
				return SQL() + "  FOR UPDATE ";
			}
		}
		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table csc_wlt_contract
	 *
	 * @mbggenerated Fri Jun 08 18:04:10 CST 2018
	 */
	public String updateByExampleSelective(Map<String, Object> parameter) {
		CscWltContract record = (CscWltContract) parameter.get("record");
		CscWltContractExample example = (CscWltContractExample) parameter.get("example");

		BEGIN();
		UPDATE("csc_wlt_contract");

		if (record.getContractId() != null) {
			SET("contract_id = #{record.contractId,jdbcType=VARCHAR}");
		}

		if (record.getContractAddress() != null) {
			SET("contract_address = #{record.contractAddress,jdbcType=VARCHAR}");
		}

		if (record.getContractTxHash() != null) {
			SET("contract_tx_hash = #{record.contractTxHash,jdbcType=VARCHAR}");
		}

		if (record.getContractType() != null) {
			SET("contract_type = #{record.contractType,jdbcType=VARCHAR}");
		}

		if (record.getContractName() != null) {
			SET("contract_name = #{record.contractName,jdbcType=VARCHAR}");
		}

		if (record.getContractStatus() != null) {
			SET("contract_status = #{record.contractStatus,jdbcType=VARCHAR}");
		}

		if (record.getCreatedTime() != null) {
			SET("created_time = #{record.createdTime,jdbcType=TIMESTAMP}");
		}

		if (record.getUpdatedTime() != null) {
			SET("updated_time = #{record.updatedTime,jdbcType=TIMESTAMP}");
		}

		if (record.getReserved1() != null) {
			SET("reserved1 = #{record.reserved1,jdbcType=VARCHAR}");
		}

		if (record.getReserved2() != null) {
			SET("reserved2 = #{record.reserved2,jdbcType=VARCHAR}");
		}

		applyWhere(example, true);
		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table csc_wlt_contract
	 *
	 * @mbggenerated Fri Jun 08 18:04:10 CST 2018
	 */
	public String updateByExample(Map<String, Object> parameter) {
		BEGIN();
		UPDATE("csc_wlt_contract");

		SET("contract_id = #{record.contractId,jdbcType=VARCHAR}");
		SET("contract_address = #{record.contractAddress,jdbcType=VARCHAR}");
		SET("contract_tx_hash = #{record.contractTxHash,jdbcType=VARCHAR}");
		SET("contract_type = #{record.contractType,jdbcType=VARCHAR}");
		SET("contract_name = #{record.contractName,jdbcType=VARCHAR}");
		SET("contract_status = #{record.contractStatus,jdbcType=VARCHAR}");
		SET("created_time = #{record.createdTime,jdbcType=TIMESTAMP}");
		SET("updated_time = #{record.updatedTime,jdbcType=TIMESTAMP}");
		SET("reserved1 = #{record.reserved1,jdbcType=VARCHAR}");
		SET("reserved2 = #{record.reserved2,jdbcType=VARCHAR}");

		CscWltContractExample example = (CscWltContractExample) parameter.get("example");
		applyWhere(example, true);
		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table csc_wlt_contract
	 *
	 * @mbggenerated Fri Jun 08 18:04:10 CST 2018
	 */
	public String updateByPrimaryKeySelective(CscWltContract record) {
		BEGIN();
		UPDATE("csc_wlt_contract");

		if (record.getContractAddress() != null) {
			SET("contract_address = #{contractAddress,jdbcType=VARCHAR}");
		}

		if (record.getContractTxHash() != null) {
			SET("contract_tx_hash = #{contractTxHash,jdbcType=VARCHAR}");
		}

		if (record.getContractType() != null) {
			SET("contract_type = #{contractType,jdbcType=VARCHAR}");
		}

		if (record.getContractName() != null) {
			SET("contract_name = #{contractName,jdbcType=VARCHAR}");
		}

		if (record.getContractStatus() != null) {
			SET("contract_status = #{contractStatus,jdbcType=VARCHAR}");
		}

		if (record.getCreatedTime() != null) {
			SET("created_time = #{createdTime,jdbcType=TIMESTAMP}");
		}

		if (record.getUpdatedTime() != null) {
			SET("updated_time = #{updatedTime,jdbcType=TIMESTAMP}");
		}

		if (record.getReserved1() != null) {
			SET("reserved1 = #{reserved1,jdbcType=VARCHAR}");
		}

		if (record.getReserved2() != null) {
			SET("reserved2 = #{reserved2,jdbcType=VARCHAR}");
		}

		WHERE("contract_id = #{contractId,jdbcType=VARCHAR}");

		return SQL();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table csc_wlt_contract
	 *
	 * @mbggenerated Fri Jun 08 18:04:10 CST 2018
	 */
	protected void applyWhere(CscWltContractExample example, boolean includeExamplePhrase) {
		if (example == null) {
			return;
		}

		String parmPhrase1;
		String parmPhrase1_th;
		String parmPhrase2;
		String parmPhrase2_th;
		String parmPhrase3;
		String parmPhrase3_th;
		if (includeExamplePhrase) {
			parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		} else {
			parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		}

		StringBuilder sb = new StringBuilder();
		List<Criteria> oredCriteria = example.getOredCriteria();
		boolean firstCriteria = true;
		for (int i = 0; i < oredCriteria.size(); i++) {
			Criteria criteria = oredCriteria.get(i);
			if (criteria.isValid()) {
				if (firstCriteria) {
					firstCriteria = false;
				} else {
					sb.append(" or ");
				}

				sb.append('(');
				List<Criterion> criterions = criteria.getAllCriteria();
				boolean firstCriterion = true;
				for (int j = 0; j < criterions.size(); j++) {
					Criterion criterion = criterions.get(j);
					if (firstCriterion) {
						firstCriterion = false;
					} else {
						sb.append(" and ");
					}

					if (criterion.isNoValue()) {
						sb.append(criterion.getCondition());
					} else if (criterion.isSingleValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
						} else {
							sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler()));
						}
					} else if (criterion.isBetweenValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
						} else {
							sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
						}
					} else if (criterion.isListValue()) {
						sb.append(criterion.getCondition());
						sb.append(" (");
						List<?> listItems = (List<?>) criterion.getValue();
						boolean comma = false;
						for (int k = 0; k < listItems.size(); k++) {
							if (comma) {
								sb.append(", ");
							} else {
								comma = true;
							}
							if (criterion.getTypeHandler() == null) {
								sb.append(String.format(parmPhrase3, i, j, k));
							} else {
								sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
							}
						}
						sb.append(')');
					}
				}
				sb.append(')');
			}
		}

		if (sb.length() > 0) {
			WHERE(sb.toString());
		}
	}
}